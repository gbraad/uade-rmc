== Retro music container (rmc) file format ==

Uses file extension ".rmc".

rmc file is defined by the the following Python
statement by using bencode serialization:

	bencode([MAGIC, meta, files])

where meta and files are dictionaries, and
MAGIC = 'rmc\x00\xfb\x13\xf6\x1f\xa2' (9 bytes).

The first 12 bytes of rmc file define a file magic (prefix):

    'l9:rmc\x00\xfb\x13\xf6\x1f\xa2'

Meta dictionary begins at offset 12 in RMC file.

Example in Python syntax:

>>> bencode(['rmc\x00\xfb\x13\xf6\x1f\xa2', {}, {}])
'l9:rmc\x00\xfb\x13\xf6\x1f\xa2dedee'

meta spec for 'amiga' files:

meta = {'platform': 'amiga',
       	'subsongs': {INT_KEY: int}, # length in milliseconds
	OPTIONAL_KEY('format'): str,
	OPTIONAL_KEY('subformat'): str,
      	OPTIONAL_KEY('title'): str,
      	OPTIONAL_KEY('author'): str,
      	OPTIONAL_KEY('year'): int,
      	OPTIONAL_KEY('song'): str,
      	OPTIONAL_KEY('player'): str,
	OPTIONAL_KEY('epoption'): {}, # a dictionary of eagleplayer options
      	OPTIONAL_KEY('comment'): str,
       }

The meta spec for 'c64' files should contain STIL information.

'song' and 'player' filenames refer to a file located inside files
dictionary. 'song' is the name of the file to be played. If there is
only one file in the files dictionary, it is assumed to be the song
and this field is unnecessary.
'player' referes to the file name of the eagleplayer that should play the song.
If 'player' filename is not found from file dictionary,
it is looked up from uade's eagleplayer directory.

Optional field 'format' refers to the name of the format.  Usually the
format can be inferred from the file. If the format can not be
inferred, a policy decision has to be made. The policy should be documented
here. One alternative for format name is the value from eagleplayer's
PlayerName field. Note, the PlayerName field may not exist or it may be
ambiguous. Following values have been defined explicitly for 'format' field
so far:

* 'custom' for custom songs
* 'Protracker and family' for Protracker, Soundtracker and Noisetracker variants

The goal is to make as little policy as possible.

'subformat' field specifies the format more exactly. This is often not
required. For example, if format == 'Protracker and family',
subformat can be 'Protracker 1.0c'. Specifying subformat is almost always
a manual operation, not inferred by the rmc tool.

'epoption' is a dictionary of eagleplayer options. These are mostly the
options supported by uade. For example:	epoption['timer'] == 'vblank'
informs the player that vertical blanking interrupt timing should be used.
This may override CIA timer.

File spec:

files = {'regularfilename': str,
      	 'directoryname': {},
	}

== Character encoding ==

Strings should be encoded with utf-8.
